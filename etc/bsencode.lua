if #arg ~= 1 then
    io.write(string.format('Usage: %s <compressor.lua> <decompressor.c>', arg[0]))
    os.exit(1)
end

local function rle(contents)
    contents = contents:gsub('\n%s-\n', '\n\n')

    for i = 16, 1, -1 do
        local spaces = string.rep(' ', i * 4)
        contents = contents:gsub(spaces, string.char(0xf0 | (i - 1)))
    end

    return contents
end

local dict = {
    [" "   ] = "001", -- 26101
    ["e"   ] = "1100", -- 19009
    ["t"   ] = "0000", -- 12052
    ["n"   ] = "11111", -- 11679
    ["o"   ] = "11101", -- 10326
    ["\x0a"] = "11100", -- 10304
    ["i"   ] = "11011", -- 10043
    ["s"   ] = "10110", -- 9436
    ["l"   ] = "10011", -- 8759
    ["a"   ] = "10001", -- 8712
    ["r"   ] = "10000", -- 8507
    ["d"   ] = "01100", -- 7240
    [","   ] = "01011", -- 6721
    ["="   ] = "01001", -- 6628
    ["."   ] = "01000", -- 6580
    ["0"   ] = "00011", -- 6336
    ["m"   ] = "00010", -- 5841
    ["f"   ] = "111100", -- 5556
    ["c"   ] = "110101", -- 5054
    ["h"   ] = "101111", -- 4787
    ["u"   ] = "101110", -- 4694
    ["("   ] = "101011", -- 4677
    [")"   ] = "101010", -- 4665
    ["p"   ] = "100101", -- 4393
    ["1"   ] = "011110", -- 3998
    ["'"   ] = "011100", -- 3788
    ["_"   ] = "011011", -- 3787
    ["2"   ] = "1101001", -- 2512
    ["y"   ] = "1010011", -- 2327
    ["g"   ] = "1010000", -- 2224
    ["\xf2"] = "1001001", -- 2221
    ["b"   ] = "0111111", -- 2051
    ["\xf1"] = "0111110", -- 2039
    ["7"   ] = "0110101", -- 1858
    ["5"   ] = "0110100", -- 1840
    ["-"   ] = "0101000", -- 1525
    ["\xf0"] = "11110111", -- 1493
    ["6"   ] = "11110101", -- 1356
    ["\""  ] = "11110100", -- 1277
    ["4"   ] = "11010001", -- 1250
    ["["   ] = "10100101", -- 1141
    ["]"   ] = "10100100", -- 1131
    ["M"   ] = "10100011", -- 1128
    ["k"   ] = "10100010", -- 1099
    ["x"   ] = "10010001", -- 1064
    ["9"   ] = "10010000", -- 1040
    ["w"   ] = "01110111", -- 1022
    ["v"   ] = "01110110", -- 1004
    [":"   ] = "01110100", -- 966
    ["\xf3"] = "01010111", -- 941
    ["3"   ] = "111101101", -- 730
    ["\\"  ] = "010101100", -- 439
    ["8"   ] = "010101011", -- 438
    ["}"   ] = "010101010", -- 436
    ["{"   ] = "010101001", -- 435
    [">"   ] = "010101000", -- 424
    ["\xf4"] = "010100101", -- 402
    ["%"   ] = "010100110", -- 402
    ["<"   ] = "010100100", -- 399
    ["q"   ] = "1101000010", -- 320
    ["+"   ] = "0111010111", -- 270
    ["#"   ] = "0111010100", -- 228
    ["S"   ] = "0101011010", -- 222
    ["I"   ] = "0101001110", -- 202
    ["E"   ] = "11110110001", -- 171
    ["T"   ] = "11010000011", -- 148
    ["C"   ] = "11010000010", -- 146
    ["/"   ] = "01110101101", -- 134
    ["P"   ] = "01110101100", -- 126
    ["F"   ] = "01010110111", -- 115
    ["\xf5"] = "01010110110", -- 111
    ["D"   ] = "01010011110", -- 105
    ["|"   ] = "111101100111", -- 103
    ["A"   ] = "111101100101", -- 89
    ["`"   ] = "111101100100", -- 87
    ["*"   ] = "111101100001", -- 86
    [";"   ] = "110100001111", -- 85
    ["L"   ] = "111101100000", -- 85
    ["U"   ] = "110100001110", -- 84
    ["j"   ] = "110100001101", -- 81
    ["R"   ] = "110100001100", -- 78
    ["V"   ] = "110100000001", -- 68
    ["H"   ] = "110100000010", -- 68
    ["~"   ] = "110100000000", -- 67
    ["\xf6"] = "011101010111", -- 66
    ["z"   ] = "011101010101", -- 59
    ["@"   ] = "011101010100", -- 58
    ["G"   ] = "010100111110", -- 54
    ["O"   ] = "1111011001100", -- 41
    ["B"   ] = "1101000000111", -- 37
    ["$"   ] = "0111010101100", -- 30
    ["N"   ] = "0111010101101", -- 30
    ["W"   ] = "0101001111111", -- 29
    ["&"   ] = "0101001111110", -- 27
    ["\xf7"] = "11110110011010", -- 25
    ["Q"   ] = "111101100110111", -- 15
    ["K"   ] = "111101100110110", -- 12
    ["^"   ] = "110100000011010", -- 10
    ["?"   ] = "110100000011011", -- 10
    ["\xf8"] = "110100000011000", -- 8
    ["Y"   ] = "1101000000110010", -- 3
    ["X"   ] = "11010000001100111", -- 3
    ["!"   ] = "110100000011001101", -- 2
    ["\xf9"] = "110100000011001100", -- 1
}

local file = assert(io.open(arg[1], 'rb'))
local contents = rle(file:read('*a'))
file:close()

local b1 = #contents & 0xff
local b2 = (#contents >> 8) & 0xff
local b3 = (#contents >> 16) & 0xff
local b4 = (#contents >> 24) & 0xff

contents = contents:gsub('.', function(symbol)
    return dict[symbol] or error(string.format('symbol %q not in dictionary', symbol))
end)

if #contents % 8 ~= 0 then
    contents = contents .. string.rep('0', 8 - (#contents % 8))
end

contents = contents:gsub('%d%d%d%d%d%d%d%d', function(bits) return string.char(tonumber(bits, 2)) end)

io.write(string.char(b1, b2, b3, b4), contents)
